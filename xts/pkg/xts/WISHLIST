**********************************************************************************
**********************************************************************************
** 
**  WISHLIST: 2008-04-07 for xts
**
**********************************************************************************
**********************************************************************************

* add lines.xts method, to add shading and events with markup -- much like
  Peter Carl's code for PA

* diff.xts and lag.xts implemented. Rework diff.xts remove reliance on diff.zoo
  NOTE: currently moved to .diff.xts and .lag.xts due to some internal zoo-compat
  issues/ [done! -jar]

* index<- and time<- replacement methods

* new unit tests to ensure classes extending xts maintain class, works in [.xts

* Reclass improvements to handle failure gracefully

* [20080224] dynamically determine .CLASSnames attribute for as.xts methods

* 'try.xts' [was use.xts] method for use inside functions - possibly with custom warnings, and
  reduced construction overhead [done -jar]
      
* 'summary.xts'

* 'adjIndex': adjust time stamps in-place. [align.time possibly accomplishes this]

* 'xcoredata' [done -jar]

* add additional Fortran period.mean, period.sd, period.var, period.cor
  period.median, period.mode, like runFun in TTR

* write 'as.ts.xts' method: handle NAs correctly


* 'Ops.xts' method - [done -jar]


* An xtsAlign method to align series by date. - match monthly data to first/last...


* merge.xts, cbind [done!]


* indexClass and index<- should warn if non-unique index values are applied [ less important now that we
  are moving to allow non-unique index values ]


* add zooreg as a handled class, possibly mts if necessary


* Write more test cases to better 'test' the functions, specifically tests
  to check on xts class persistence
  Tests to incorporate:
  
    for all data classes: 'zoo','ts','timeSeries','its','irts','matrix','data.frame'
      as.xts
      reclass
    
    indexClass<- for 'Date','timeDate','POSIXct','chron','dates','yearmon','yearqtr'
    indexClass<- change then  =>  reclass

   *`timeSeries` has internal issues when subsetting.  charvec loses atomic and attributes
   *`ts` converts to a numeric object if subset by date

   [update 2/16/2008: most of the above have been implemented]


* [.xts<- replacement method [done]


* cbind/rbind xts methods required to maintain xts object - [ done - jar ]


* aggregate.xts (dispatch to NextMethod or call aggregate.zoo and
  re 'xts' results???

* as.xts.numeric for named numerics if names are coercible to time-based??

* new %::% binary operator to create sequence of timeBased dates - from strings and timeBased
  [done implemented via timeBasedSeq()]

* as.data.frame.xts, as.matrix.xts
  as.zoo.xts, as.its.xts,
  as.timeSeries.xts, as.irts.xts

  above should handle clean coercion to the requested classes,
  so that it would be possible to do the following:
    x # a timeSeries object
    identical(as.timeSeries(as.xts(x)),x)

     -- or --

    as.ts(as.xts(x))

  possibly rely on zoo methods instead, though may be able to do better in
  certain cases. timeSeries may be the tough one - as it has unique attributes
  automatically generated, that *should* just be copied.

  'as.ts' is a bad idea to rewrite.  The current method works great
  (as.ts.default or as.ts.zoo???)

  The most compelling reason is to allow for temporary conversion
  to class type required by particular functions - esp. functions
  in PerformanceAnalytics and the Rmetrics bundle, though a reliable
  coversion to 'ts' for many base functions would be also useful

  essentially a mechanism to allow for the same conversion as.* is
  used for elsewhere.

* indexClass and indexClass<- methods allow for changing index class,
  at present only simple conversions work, as no additional args
  are passed to as.POSIXct,etc methods.  Need to fix this.

  Additionally indexing to different formats needs to be done:

      as.yearmon.xts, as.yearqtr.xts,
      as.timeDate.xts, as.POSIXct.xts,
      as.chron.xts, as.dates.xts, as.times.xts,
      as.Date.xts

* look into chron, dates (& yearmon, yearqtr)
  -- this can't be extensible, as we couldn't test for time nature...
  -- but we *should* cover all *known* date handling in R at any given time
  [done 2/16/2008 - jar]

* create a matrix of time-series types and attributes for comparison
  documentation [ done - jar ]

* write an introductory vignette for 'xts', possibly an article for R news
  [ done - jar ]

* web page on R-Forge

* a generic extension function ?extend.xts?
